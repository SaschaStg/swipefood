default:
  image: "node:18-alpine"

build:frontend:
  stage: "build"
  script:
    - "cd frontend"
    - "npm ci --cache .npm --prefer-offline"
    - "npm run build"
  artifacts:
    paths:
      - "frontend/dist"
  cache:
    key:
      files:
        - "frontend/package-lock.json"
      prefix: "frontend"
    paths:
      - "frontend/.npm"

build:backend:
  stage: "build"
  script:
    - "cd backend"
    - "npm ci --cache .npm --prefer-offline"
    - "npm run build"
  artifacts:
    paths:
      - "backend/dist"
  cache:
    key:
      files:
        - "backend/package-lock.json"
      prefix: "backend"

lint:frontend:
  stage: "test"
  needs: []
  script:
    - "cd frontend"
    - "npm ci --cache .npm --prefer-offline"
    - "npm run lint"
  cache:
    key:
      files:
        - "backend/package-lock.json"
      prefix: "backend"

lint:backend:
  stage: "test"
  needs: []
  script:
    - "cd backend"
    - "npm ci --cache .npm --prefer-offline"
    - "npm run lint"
  cache:
    key:
      files:
        - "backend/package-lock.json"
      prefix: "backend"

deploy:prod:frontend:
  stage: "deploy"
  when: "manual"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - "build:frontend"
    - "lint:frontend"
  script:
    - "npm install --global firebase-tools"
    - "firebase deploy --only hosting"
  environment:
    name: production
    url: https://swipefood-a5664.web.app/

deploy:staging:backend:
  image: jdrouet/docker-with-buildx:stable
  tags:
    - docker-in-docker
  stage: "deploy"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - "build:backend"
    - "lint:backend"
  services:
    - "docker:dind"
  variables:
    IMAGE_REPO: registry.mi.kienhoefr.de/swipefood/backend
    TAG: staging
    PLATFORMS: linux/amd64
  script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD registry.mi.kienhoefr.de
    - docker context create cxt
    - docker buildx create --driver docker-container --use cxt
    - docker buildx build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from=type=registry,ref=$IMAGE_REPO:$TAG --pull --platform $PLATFORMS -t $IMAGE_REPO:$TAG -t $IMAGE_REPO:$CI_COMMIT_SHA --push backend

deploy:prod:backend:
  image: jdrouet/docker-with-buildx:stable
  tags:
    - docker-in-docker
  stage: "deploy"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  when: "manual"
  needs:
    - "build:backend"
    - "lint:backend"
    - "deploy:staging:backend"
  services:
    - "docker:dind"
  variables:
    IMAGE_REPO: registry.mi.kienhoefr.de/swipefood/backend
    TAG: latest
    PLATFORMS: linux/amd64
  script:
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD registry.mi.kienhoefr.de
    - docker context create cxt
    - docker buildx create --driver docker-container --use cxt
    - docker buildx build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from=type=registry,ref=$IMAGE_REPO:$CI_COMMIT_SHA --pull --platform $PLATFORMS -t $IMAGE_REPO:$TAG -t $IMAGE_REPO:$CI_COMMIT_SHA --push backend
